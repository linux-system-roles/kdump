---
- name: Check whether key exists
  stat:
    path: "{{ kdump_sshkey }}"
  register: sshkey_stats

- name: Create key
  command: "/usr/bin/ssh-keygen -t rsa -f {{ kdump_sshkey }} -N '' "
  when: not sshkey_stats.stat.exists
  changed_when: true

- name: Fetch key
  slurp:
    src: "{{ kdump_sshkey }}.pub"
  register: keydata

- name: Get userinfo for {{ kdump_ssh_user }}
  user:
    name: "{{ kdump_ssh_user }}"
    state: present
  register: __kdump_ssh_user_info
  delegate_to: "{{ kdump_ssh_server }}"

- name: Set authorized_keys file path
  set_fact:
    __kdump_authorized_keys_path: "{{
      __kdump_ssh_user_info.home ~ '/.ssh/authorized_keys' }}"

- name: Get the authorized_keys file for the user
  stat:
    path: "{{ __kdump_authorized_keys_path }}"
  register: __kdump_authorized_keys_file
  delegate_to: "{{ kdump_ssh_server }}"

- name: Get the authorized_keys contents, if any
  slurp:
    src: "{{ __kdump_authorized_keys_file.stat.path }}"
  delegate_to: "{{ kdump_ssh_server }}"
  register: __kdump_authorized_keys
  when:
    - __kdump_authorized_keys_file.stat.isreg is defined
    - __kdump_authorized_keys_file.stat.isreg

- name: Write new authorized_keys if needed
  vars:
    # note - Cg== is the newline character in base64
    __kdump_authorized_keys_lines: "{{
      (__kdump_authorized_keys.content | d('Cg==') | b64decode).split('\n') |
      reject('match', '^$') | list }}"
    __kdump_new_key: "{{ keydata.content | b64decode | trim }}"
  copy:
    content: "{{ ((__kdump_authorized_keys_lines + [__kdump_new_key]) |
      join('\n')) ~ '\n' }}"
    dest: "{{ __kdump_authorized_keys_file.stat.path |
              d(__kdump_authorized_keys_path) }}"
    group: "{{ __kdump_authorized_keys_file.stat.group | d(kdump_ssh_user) }}"
    owner: "{{ __kdump_authorized_keys_file.stat.owner | d(kdump_ssh_user) }}"
    mode: "{{ __kdump_authorized_keys_file.stat.mode | d('0600') }}"
  delegate_to: "{{ kdump_ssh_server }}"
  when: not __kdump_new_key in __kdump_authorized_keys_lines

- name: Fetch the servers public key
  slurp:
    src: /etc/ssh/ssh_host_rsa_key.pub
  register: serverpubkey
  delegate_to: "{{ kdump_ssh_server }}"

- name: Add the servers public key to known_hosts on managed node
  known_hosts:
    key: "{{ __kdump_ssh_server_location }} {{ serverpubkey.content |
             b64decode }}"
    name: "{{ __kdump_ssh_server_location }}"
    path: /etc/ssh/ssh_known_hosts
